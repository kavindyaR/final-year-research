services:
  nginx:
    container_name: proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        ENV: dev
    ports:
      - "80:80"
    depends_on:
      - user-service
      - data-service
      - frontend

  user-service:
    container_name: user_msvc
    build:
      context: ./user-msvc
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    env_file:
      - ./user-msvc/.env
    volumes:
      - ./user-msvc:/app
      - /app/node_modules
    tty: true

  data-service:
    container_name: data_msvc
    build:
      context: ./data-msvc
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=development
    env_file:
      - ./data-msvc/.env
    volumes:
      - ./data-msvc:/app
      - /app/venv
    entrypoint: ["/bin/sh", "/app/entrypoint.sh"]
    restart: unless-stopped

  frontend:
    container_name: react_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevent overwriting node_modules
    restart: unless-stopped
    depends_on:
      - user-service
    # command: sh -c "npm install && npm run dev -- --host"

networks:
  default:
    driver: bridge
